<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>{% block title %}Welcome!{% endblock %}</title>

        {# icons library #}
        <script src="https://kit.fontawesome.com/f576cd6ebe.js" crossorigin="anonymous"></script>

        <link href="https://necolas.github.io/normalize.css/8.0.1/normalize.css" rel="stylesheet">

        <link href="{{asset("/assets/css/base.css")}}" rel="stylesheet">
        <link href="{{asset("/assets/css/menu.css")}}" rel="stylesheet">
        <link href="{{asset("/assets/css/footer.css")}}" rel="stylesheet">
        <link href="{{asset("/assets/css/confirm-action.css")}}" rel="stylesheet">

        <link rel="icon" href="{{asset("/assets/images/mire.svg")}}" size="42x42">
        {% block stylesheets %}{% endblock %}
    </head>
    <body>
        <main>

            {% include "_menu/menu.html.twig" %}

            <section id="main-content">

                {% include "_message-flash.html.twig" %}

                {% block body %}{% endblock %}
            </section>

            <footer>

            </footer>

        </main>

        {% if app.user != NULL %}

            <script>

                const ACCOUNT_IS_VALID = !!{{app.user.isValid ? "true":"false"}} ;

            </script>

        {% endif %}

        {% if app.user != NULL %}
            <script>
                const TOKEN_USER = '{{app.user.token}}' ;
            </script>

            <script>

                // get count new messages
                fetch("/u/count/new-messages" , {
                    headers: {
                        "Content-Type": "application/json"
                    }
                } )
                .then( res => res.json() )
                .then( data => {

                    document.querySelectorAll('.new-messages-count').forEach( countElement => {

                        if( data.count > 0 ) {
                            countElement.textContent = data.count ;
                        }
                    } ) ;

                } ) ;

            </script>
        {% endif %}

        {% if app.user != NULL and app.user.isValid == true %}

            {# add global function for inrement/decrement count new message #}
            <script>

                const countNewMessageEl = document.querySelector('.new-messages-count') ;

                function getCountNewMessage() {

                    return parseInt( countNewMessageEl.textContent ) ;
                }

                function newCountNewMessage( count ) {

                    if(
                        typeof count != "number" ||
                        isNaN( count )
                    ) {
                        return false ;
                    }

                    count = count < 0 ? 0: count ;

                    countNewMessageEl.textContent = count > 0 ? count: "" ;

                    return true ;
                }

            </script>
        {% endif %}

        <script>

            if( !( window.fetch instanceof Function) ) {
                throw "this browser do not support fetch API" ;
            }

            console.log(`%c
                ───▄▀▀▀▄▄▄▄▄▄▄▀▀▀▄───
                ───█▒▒░░░░░░░░░▒▒█───
                ────█░░█░░░░░█░░█────
                ─▄▄──█░░░▀█▀░░░█──▄▄─
                █░░█─▀▄░░░░░░░▄▀─█░░█
                █▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█
                █░░╦─╦╔╗╦─╔╗╔╗╔╦╗╔╗░░█
                █░░║║║╠─║─║─║║║║║╠─░░█
                █░░╚╩╝╚╝╚╝╚╝╚╝╩─╩╚╝░░█
                █▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█
        DO NOT COPY/PASTE SCRIPT HERE
        THIS IS DANGEROUS FOR INTEGRITY OF YOUR PRIVATE DATAS .
        IF YOU DEVELOP YOU CAN CONTRIBUTE ON GIT REPOSITORY :
        https://github.com/orivoir/mire
                `,`
                    color:rgb( 42 , 192 , 42 );
                    font-weight:bold;
                    letter-spacing:.35rem;
                    background: linear-gradient(217deg, rgba(255,0,0,.8), rgba(255,0,0,0) 70.71%),
                        linear-gradient(127deg, rgba(0,42,42,.8), rgba(42,42,0,0) 70.71%),
                        linear-gradient(336deg, rgba(0,0,255,.8), rgba(0,0,255,0) 70.71%)
                    ;
                    padding: 0 2vw;
                `
            ) ;

            document.addEventListener('DOMContentLoaded' , () => {

                window.addEventListener('blur' , () => {

                    document.body.classList.add('blur') ;

                } ) ;

                window.addEventListener('focus' , () => {

                    document.body.classList.remove('blur') ;
                } ) ;

                // event close item
                document.querySelectorAll('.close').forEach( closerItem => {

                    closerItem.addEventListener('click' , function() {

                        const targetSel = this.getAttribute( 'data-close' ) ;

                        const targetEl = document.querySelector( targetSel ) ;

                        const toRemove = this.getAttribute('data-class-remove') ;
                        const toAdd = this.getAttribute('data-class-add') ;
                        const toToggle = this.getAttribute('data-class-toggle') ;

                        [ 'remove' , 'add' , 'toggle' ]
                        .forEach( type => {

                            const current = eval(`to${type.charAt(0).toUpperCase() + type.slice(1,)}`) ;

                            current.split(' ').forEach( cls => {
                                if( !!cls.length )
                                    targetEl.classList[type]( cls ) ;
                            } ) ;


                        } ) ;

                    } ) ;

                } ) ;


            } ) ;

        </script>

        <script src="{{asset("/assets/js/base.js")}}"></script>
        <script src="{{asset("/assets/js/menu.js")}}"></script>

        {% block javascripts %}{% endblock %}
    </body>
</html>
