{% extends 'base.html.twig' %}

{% block stylesheets %}

{% endblock %}

{% block title %}Register{% endblock %}

{% block body %}
    <h1>Register</h1>

    {{ form_start( registrationForm , {
        "attr": {
            "class": "form-container"
        }
    } ) }}

        <div class="form-group">
            {{ form_row(registrationForm.username , {
                'label': "username"
            } ) }}
        </div>

        <div class="form-group">
            {{ form_row(registrationForm.plainPassword, {
                "label": "password"
            } ) }}
        </div>

        <input type="hidden" id="g-score" name="g-score" value="">

        {# {{ form_widget( registrationForm ) }} #}

        <button
            type="submit"
            class="btn blue"
        >
            Register
        </button>

    {{ form_end(registrationForm) }}
{% endblock %}

{% block javascripts %}

    <script src="https://www.google.com/recaptcha/api.js?render=6LdSsdwUAAAAAHNFJPW71TznPDRrKd0IxeqoFyuR"></script>

    <script>

        grecaptcha.ready(function() {
            grecaptcha.execute(
                '6LdSsdwUAAAAAHNFJPW71TznPDRrKd0IxeqoFyuR',
                {action: 'login'}
            ).then(function(token) {

                const xhr = new XMLHttpRequest() ;

                xhr.open('POST' , '/recaptcha' );

                xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

                xhr.send( `token=${token}` ) ;

                xhr.onreadystatechange = function (){

                    let score = null ;

                    try {
                        const response = JSON.parse(xhr.responseText) ;

                        score = response.score ;
                    } catch( SyntaxError ) {

                        // return not JSON parse data
                        score = xhr.responseText.split('score')[1] ;
                    }

                    if( score >= .5 ) {

                        console.info('you are an good human ✅✅✅') ;

                    } else if ( !!score || score === .0 ) {
                        document.location.href = "https://www.google.com/recaptcha/intro/v3.html";
                        document.body = "" ;
                    }

                    if(!!score) {
                        document.querySelector('#g-score').value = score ;
                    }
                } ;


            } ) ;
        } ) ;
    </script>

    <script>

        // handler input
        const usernameInput = document.querySelector('input#registration_form_username') ;
        const passwordInput = document.querySelector('input#registration_form_plainPassword') ;

        const onFieldRequireError = function( input ) {

            input.classList.add('error') ;

        } ;

        const onFieldRequireSuccess = function( input ) {

            input.classList.remove('error') ;
        } ;

        const callbacks = {

            onRequireError: onFieldRequireError ,
            onRequireSuccess: onFieldRequireSuccess
        } ;

        const handlerUsernameInput = new HandlerInput( usernameInput , callbacks ) ;
        const handlerPasswordInput = new HandlerInput( passwordInput , callbacks ) ;

        handlerUsernameInput.require = true ;
        handlerPasswordInput.require = true ;

    </script>

{% endblock %}